---

- hosts: all
  become: true
  
  vars:
    testing123: testing

  tasks:
  - name: Update apt cache
    apt:
      update_cache: yes

  - name: Install required packages
    apt:
      name:
        - wireguard
        - wireguard-tools
      state: present

  - name: Generate private and public keys for the client and server
    command: /bin/bash -c "umask 077; wg genkey | tee {{ item.private }} | wg pubkey > {{ item.public }}"
    args:
      creates: "{{ item.private }}"
    loop:
      - { private: '/etc/wireguard/server_private_key', public: '/etc/wireguard/server_public_key' }
      - { private: '/etc/wireguard/client_private_key', public: '/etc/wireguard/client_public_key' }

  - name: Register the key file contents
    slurp:
      src: "{{ item }}"
    register: key_files
    loop:
      - '/etc/wireguard/server_private_key'
      - '/etc/wireguard/server_public_key'
      - '/etc/wireguard/client_private_key'
      - '/etc/wireguard/client_public_key'

  - name: Assign the keys to their variables
    set_fact:
      server_private_key: "{{ key_files.results[0].content | b64decode }}"
      server_public_key: "{{ key_files.results[1].content | b64decode }}"
      client_private_key: "{{ key_files.results[2].content | b64decode }}"
      client_public_key: "{{ key_files.results[3].content | b64decode }}"

  - name: Generate server config
    template:
      src: "templates/wg0-server.conf"
      dest: "/etc/wireguard/wg0.conf"
      owner: root
      group: root
      mode: '0600'

  - name: Generate client config
    template:
      src: "templates/gate0.conf"
      dest: "/root/gate0.conf"
      owner: root
      group: root
      mode: '0600'
  
  - name: Enable and start WireGuard interface
    systemd:
      name: wg-quick@wg0
      enabled: yes
      state: started

  - name: Enable IPv4 traffic forwarding
    sysctl:
      name: net.ipv4.ip_forward
      value: '1'
      state: present
      reload: yes

  - name: Set up firewall rules
    import_tasks: firewall.yml

  - name: Set up unbound for DNS
    import_tasks: dns.yml

  - name: Reboot the server
    reboot:
      msg: "Reboot initiated by Ansible for WireGuard setup"
      pre_reboot_delay: 2
      post_reboot_delay: 30
      reboot_timeout: 300
      test_command: whoami
